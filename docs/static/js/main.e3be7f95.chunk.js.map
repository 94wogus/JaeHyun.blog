{"version":3,"sources":["serviceWorker.js","utils/api.js","store/constant.js","store/action.js","components/common/Header.js","components/common/Footer.js","components/common/LeftMenu.js","components/common/Container.js","components/Home/Profile.js","views/Home.js","router.js","store/state.js","store/index.js","store/reducer.js","index.js","assets/image/bear.png","assets/image/jaehyun.jpg"],"names":["Boolean","window","location","hostname","match","axios","defaults","withCredentials","toggleDrawer","bol","type","Constant","payload","connect","state","menuSwitch","withRouter","props","dispatch","useDispatch","history","id","className","onClick","pathname","push","src","bear","alt","style","fontSize","Button","MenuOpen","Menu","Footer","goPage","event","currentTarget","getAttribute","Drawer","anchor","open","onClose","List","ListItem","Avatar","Divider","marginTop","routes","filter","r","leftmenu","map","menu","key","name","path","button","ListItemIcon","icon","ListItemText","disableTypography","primary","toUpperCase","Container","children","email","snsList","url","LinkedIn","GitHub","Instagram","Facebook","goSns","e","jaehyun","href","title","sns","IconButton","component","Home","marginLeft","store","applyMiddleware","promiseMiddleware","reduxThunk","createStore","createStoreWithMiddleware","initialState","action","Object","assign","App","createBrowserHistory","exact","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.e3be7f95.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from \"axios\"\nimport moment from \"moment\"\n\n// dev\nexport const BASE_URL = \"http://localhost:8000\";\n// prod\n\n\naxios.defaults.withCredentials = true;\n\nexport const METHOD = {\n    GET: { num: 0, type: \"get\" },\n    DELETE: { num: 1, type: \"delete\" },\n    POST: { num: 2, type: \"post\" },\n    PUT: { num: 3, type: \"put\" },\n    POST_FILES: { num: 4, type: \"post\" },\n    LOGIN: { num: 5, type: \"post\" }\n};\n\nexport const request = (method, url, payload={}) => {\n    let axiosConfig = { method: method.type, url: url };\n    if (method.num <= 1) {\n        axiosConfig = { ...axiosConfig};\n    } else if (method.num <= 3) {\n        axiosConfig = { ...axiosConfig, data: payload };\n    } else if (method.num <= 4) {\n        axiosConfig = {\n            ...axiosConfig,\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n            data: payload\n        }\n    } else {\n        axiosConfig = {\n            ...axiosConfig,\n            data: payload,\n        }\n    }\n    return axios(axiosConfig)\n    .then((resp) => {\n        return resp.data\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const checkAuthHeader = () =>{\n    var token = window.localStorage[\"token\"];\n    var exp = window.localStorage[\"exp\"] || 0;\n    var now = moment().unix()\n\n    if (exp > now && token !== undefined){\n        axios.defaults.headers.common['Authorization'] = `Token ${token}`;\n        return false\n    }\n    else{\n        window.localStorage.removeItem(\"token\")\n        window.localStorage.removeItem(\"exp\")\n        return true\n    }\n}\n\nexport const packUrl = (url, param) => {\n    Object.keys(param).forEach(function(key, index){\n        url = url + (index === 0 ? \"?\" : \"&\") + key + \"=\" + param[key]\n    })\n    return url\n}\n","export default {\n    //  ============== 0. Home ==============  //\n    TOGGLE_DRAWER: \"TOGGLE_DRAWER\"\n};\n","import { BASE_URL, METHOD, request, packUrl } from \"@/utils/api\";\nimport Constant from \"./constant\"\n\nexport function toggleDrawer(bol) {\n    return {\n        type: Constant.TOGGLE_DRAWER,\n        payload: bol,\n    };\n}\n","import React from 'react';\nimport { useDispatch, connect } from 'react-redux';\nimport {withRouter} from \"react-router-dom\"\nimport { toggleDrawer } from '@store/action'\n\nimport {Button} from '@material-ui/core';\nimport {Menu, MenuOpen} from '@material-ui/icons';\n\nimport bear from \"@image/bear.png\"\n\nconst Header = (props) => {\n    const dispatch = useDispatch();\n    const { menuSwitch, history } = props;\n\n    const goHome = () => {\n        if (history.location.pathname !== \"/home\" && history.location.pathname !== \"/\" ){\n            history.push('/home')\n        }\n    }\n\n    const openDrawer = () => {\n        dispatch(toggleDrawer(true))\n    };\n\n    return (\n        <div id=\"header\">\n            <div className=\"logoWarp\" onClick={goHome}>\n                <img src={bear} alt=\"bearimag\"></img>\n                <div className=\"title\">\n                    <span>JaeHyun</span><span style={{fontSize: 30}}>'</span><span>s Blog</span>\n                </div>\n            </div>\n            <Button onClick={openDrawer}>\n                {menuSwitch\n                ?<MenuOpen />\n                :<Menu/>\n                }\n            </Button>\n        </div>\n    );\n};\n\nexport default connect(state => ({\n    menuSwitch: state.menuSwitch\n}))(withRouter(Header));\n","import React from 'react';\n\nconst Footer = () => {\n\n    return (\n        <div id=\"footer\">\n            <span>Copyright © JaeHyun. All right reserved.</span>\n        </div>\n    );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { useDispatch, connect } from 'react-redux';\nimport {withRouter} from \"react-router-dom\"\nimport { toggleDrawer } from '@store/action'\n\nimport {\n    Drawer, Avatar, List, ListItem, ListItemIcon, ListItemText,\n    Divider\n} from '@material-ui/core';\n\nimport routes from \"@/router\"\nimport bear from \"@image/bear.png\"\n\nconst LeftMenu = (props) => {\n    const dispatch = useDispatch();\n    const { menuSwitch, history } = props;\n\n    const closeDrawer = () => {\n        dispatch(toggleDrawer(false))\n    };\n\n    const goPage = (event) => {\n        dispatch(toggleDrawer(false))\n        history.push(event.currentTarget.getAttribute(\"path\"))\n    };\n\n    return (\n        <Drawer id=\"drawer\" anchor=\"left\" open={menuSwitch} onClose={closeDrawer}>\n            <List className=\"menuList\">\n                <ListItem className=\"avatarWarp\">\n                    <Avatar alt=\"JaeHyun.Back\" src={bear} className=\"avatar\"/>\n                    <span>JaeHyun</span><span style={{fontSize: 24}}>'</span><span>s Blog</span>\n                </ListItem>\n                <Divider style={{marginTop: 20}}></Divider>\n                {routes.filter(r => r.leftmenu).map((menu) => (\n                    <ListItem \n                        key={menu.name}\n                        path={menu.path}\n                        button={true}\n                        className=\"menu\"\n                        onClick={goPage}\n                    >\n                        <ListItemIcon >{menu.icon}</ListItemIcon>\n                        <ListItemText \n                            disableTypography={true}\n                            primary={menu.name.toUpperCase()}\n                        />\n                    </ListItem>\n                ))}\n            </List>\n        </Drawer>\n    );\n};\n\nexport default connect(state => ({\n    menuSwitch: state.menuSwitch\n}))(withRouter(LeftMenu));\n","import React, {Fragment} from 'react';\n\nimport Header from \"@components/common/Header\"\nimport Footer from \"@components/common/Footer\"\nimport LeftMenu from \"@components/common/LeftMenu\"\n\nconst Container = (props) => {\n    const { children } = props;\n  \n    return (\n        <Fragment>\n            <Header />\n            <LeftMenu />\n            {children}\n            <Footer />\n        </Fragment>\n    );\n}\n\nexport default Container;\n","import React from 'react';\nimport {withRouter} from \"react-router-dom\"\n\nimport jaehyun from \"@image/jaehyun.jpg\"\nimport IconButton from '@material-ui/core/IconButton';\nimport {LinkedIn, GitHub, Instagram, Facebook} from '@material-ui/icons';\n\nconst email = \"94wogus@gmail.com\"\nconst workEmail = \"94wogus@quantit.io\"\n\nconst snsList = [\n    {  \n        name: \"LinkedIn\",\n        url: \"https://www.linkedin.com/in/jae-hyun-back-a1496118b/\",\n        icon: <LinkedIn className=\"icon\"/>\n    },\n    {\n        name: \"GitHub\",\n        url: \"https://github.com/94wogus/\",\n        icon: <GitHub className=\"icon\"/>\n    },\n    {\n        name: \"Instagram\",\n        url: \"https://www.instagram.com/jaehyunback/?hl=ko\",\n        icon: <Instagram className=\"icon\"/>\n    },\n    {\n        name: \"Facebook\",\n        url: \"https://www.facebook.com/back.jaehyun/\",\n        icon: <Facebook className=\"icon\"/>\n    }\n]\n\nconst Profile = (props) => {\n    const { history } = props;\n\n    const goHome = () => {\n        if (history.location.pathname !== \"/home\" && history.location.pathname !== \"/\" ){\n            // history.push('/home')\n            console.log(\"good\")\n        }\n    }\n\n    const goSns = (e) => {\n        window.open(e.currentTarget.getAttribute(\"path\"), '_blank');\n    } \n\n    return (\n        <div id=\"profileContainer\">\n            <img className=\"profileImage\" src={jaehyun} alt=\"jaehyun-character\"/>\n            <div className=\"profile\">\n                <div>\n                    <span>JaeHyun.Back</span> / Developer(Quantit)\n                </div>\n                <div>\n                    email: <a href={`mailto:${email}`} title=\"개인 이메일\">{email}</a>\n                </div>\n                <div>\n                    work-email: <a href={`mailto:${workEmail}`} title=\"업무용 이메일\">{workEmail}</a>\n                </div>\n                <div className=\"snsList\">\n                    {snsList.map((sns) => (\n                        <IconButton\n                            key={sns.name}\n                            onClick={goSns}\n                            path={sns.url}\n                        >\n                            {sns.icon}\n                        </IconButton>\n                    ))\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(Profile);\n","import React from 'react';\nimport {withRouter} from \"react-router-dom\"\nimport Container from \"@components/common/Container\"\n\nimport Profile from \"@components/Home/Profile\"\n\nconst Home = (props) => {\n    return (\n        <Container>\n            <div id=\"home\" className=\"main\">\n                <Profile /> \n            </div>\n        </Container>\n    )\n}\n\nexport default withRouter(Home);\n","import React from 'react';\nimport Home from '@views/Home';\n\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\n\nconst routes = [\n    {\n        name: 'main',\n        path: '/',\n        component: Home,\n        leftmenu: false\n    },\n    {\n        name: 'home',\n        path: '/home',\n        component: Home,\n        leftmenu: true,\n        icon: <HomeRoundedIcon fontSize=\"large\" style={{marginLeft: 10}}/>\n    }\n];\n\nexport default routes;\n","export default {\n    // ============ 0.Home ============ //\n    menuSwitch: false,\n}\n","import {applyMiddleware, createStore} from \"redux\"\nimport promiseMiddleware from \"redux-promise\";\nimport reduxThunk from \"redux-thunk\";\n\nimport rootReducer from \"./reducer\"\n\nconst createStoreWithMiddleware = applyMiddleware(\n    promiseMiddleware,\n    reduxThunk\n)(createStore);\n\nconst store = createStoreWithMiddleware(rootReducer)\nwindow.store = store\n\nexport default store\n","import axios from 'axios'\nimport Constant from \"./constant\"\nimport initialState from \"./state\"\n\nexport default function rootReducer(state=initialState, action){\n    switch(action.type){\n        //  ============== 0. Home ==============  //\n        case Constant.TOGGLE_DRAWER:\n            return Object.assign({}, state, {\n                menuSwitch: action.payload\n            })\n        default:\n            return state;\n    }\n}\n","import React, {Fragment} from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, Switch, Route} from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from './serviceWorker';\n\nimport routes from '@/router';\nimport store from '@/store';\n\nimport '@assets/style/common.css';\nimport '@assets/style/desktop.scss';\n\n// import { ToastContainer } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n\n\n\nconst App = () => {\n    const history = createBrowserHistory();\n    return (\n        <Fragment>\n            <Router history={history}>\n                <Switch>\n                {routes.map((r) => (\n                    <Route key={r.path} path={r.path} component={r.component} exact/>\n                ))}\n                </Switch>\n            </Router>\n            {/* <ToastContainer \n                position=\"top-right\"\n                autoClose={3000}\n                hideProgressBar={false}\n                newestOnTop={false}\n                closeOnClick\n                rtl={false}\n                pauseOnFocusLoss\n                draggable\n                pauseOnHover\n            /> */}\n        </Fragment>\n    )\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/bear.e499188c.png\";","module.exports = __webpack_public_path__ + \"static/media/jaehyun.bb4dd16a.jpg\";"],"sourceRoot":""}