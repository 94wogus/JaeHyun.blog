{"version":3,"sources":["assets/image/jaehyun.jpg","assets/image/bear.png","serviceWorker.js","components/common/Footer.js","views/PrivacyPolicy.js","store/constant.js","store/action.js","components/common/Header.js","components/common/LeftMenu.js","components/common/Container.js","components/Home/Profile.js","components/common/PostCard.js","components/Home/PostList.js","views/Home.js","components/Post/Series.js","components/Post/PostList.js","views/Post.js","utils/api.js","views/PostRead.js","router.js","store/state.js","utils/func.js","store/index.js","store/reducer.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Footer","id","withRouter","props","className","src","jaehyun","alt","href","toggleDrawer","bol","type","Constant","payload","setCurDoc","cur_doc","cur_doc_id","cur_doc_idx","connect","state","menuSwitch","dispatch","useDispatch","history","onClick","pathname","push","bear","style","fontSize","Button","MenuOpen","Menu","goPage","event","currentTarget","getAttribute","Drawer","anchor","open","onClose","List","ListItem","Avatar","Divider","marginTop","routes","filter","r","leftmenu","map","menu","key","name","path","button","ListItemIcon","icon","ListItemText","disableTypography","primary","toUpperCase","Container","children","email","snsList","url","LinkedIn","GitHub","Instagram","Facebook","goSns","e","title","sns","IconButton","post","Card","PostId","idx","CardActionArea","ImageId","Title","CardContent","Description","LastUpdated","post_list","slice","grouped_post_list","Object","keys","category","length","post_page","cur_page_num","cur_page_post_list","Pagination","count","onChange","value","setPostPageNum","page","marginBottom","SPREATSHEET_URL","process","METHOD","num","request","method","json","axiosConfig","body","JSON","stringify","headers","fetch","then","response","text","catch","error","console","useEffect","fid","params","result","doc","document","getElementById","dummyHTML","createElement","innerHTML","querySelectorAll","forEach","currentValue","currentIndex","listObj","appendChild","bodyChlidren","querySelector","Array","prototype","call","elem","index","component","Home","PrivacyPolicy","PostRead","HomeRounded","marginLeft","Post","DescriptionOutlined","groupBy","items","reduce","item","store","applyMiddleware","promiseMiddleware","reduxThunk","createStore","createStoreWithMiddleware","initialState","action","assign","quotient","parseInt","sorted_post_list","begin","end","App","createBrowserHistory","values","shift","packed_post_list","n","reverse","getPostList","exact","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1942ae81.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/jaehyun.bb4dd16a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bear.e499188c.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nconst Footer = () => {\n\n    return (\n        <div id=\"footer\">\n            <span>Copyright © JaeHyun. All right reserved.</span>\n        </div>\n    );\n};\n\nexport default Footer;\n","import React from 'react';\r\nimport {withRouter} from \"react-router-dom\"\r\nimport Footer from \"@components/common/Footer\"\r\nimport jaehyun from \"@image/jaehyun.jpg\"\r\n\r\nconst PrivacyPolicy = (props) => {\r\n    return (\r\n        <div id=\"private-policy\">\r\n            <div className=\"profileimg\">\r\n                <img src={jaehyun} alt=\"jaehyun-character\"/>\r\n            </div>\r\n            <div className=\"content\">\r\n                <h1>Privacy Policy for JaeHyun.Back</h1>\r\n                <p>At JaeHyun's Blog, accessible from https://jaehyun-blog.ga/, one of our main priorities is the privacy of our visitors. This Privacy Policy document contains types of information that is collected and recorded by JaeHyun's Blog and how we use it.</p>\r\n                <p>If you have additional questions or require more information about our Privacy Policy, do not hesitate to contact us. Our Privacy Policy was created with the help of the <a href=\"https://www.generateprivacypolicy.com\">Privacy Policy Generator</a>.</p>\r\n\r\n                <h2>Log Files</h2>\r\n                <p>JaeHyun's Blog follows a standard procedure of using log files. These files log visitors when they visit websites. All hosting companies do this and a part of hosting services' analytics. The information collected by log files include internet protocol (IP) addresses, browser type, Internet Service Provider (ISP), date and time stamp, referring/exit pages, and possibly the number of clicks. These are not linked to any information that is personally identifiable. The purpose of the information is for analyzing trends, administering the site, tracking users' movement on the website, and gathering demographic information.</p>\r\n\r\n                <h2>Cookies and Web Beacons</h2>\r\n                <p>Like any other website, JaeHyun's Blog uses 'cookies'. These cookies are used to store information including visitors' preferences, and the pages on the website that the visitor accessed or visited. The information is used to optimize the users' experience by customizing our web page content based on visitors' browser type and/or other information.</p>\r\n                <p>For more general information on cookies, please read <a href=\"https://www.cookieconsent.com/what-are-cookies/\">\"What Are Cookies\"</a>.</p>\r\n\r\n                <h2>Google DoubleClick DART Cookie</h2>\r\n                <p>Google is one of a third-party vendor on our site. It also uses cookies, known as DART cookies, to serve ads to our site visitors based upon their visit to www.website.com and other sites on the internet. However, visitors may choose to decline the use of DART cookies by visiting the Google ad and content network Privacy Policy at the following URL – <a href=\"https://policies.google.com/technologies/ads\">https://policies.google.com/technologies/ads</a></p>\r\n                <h2>Our Advertising Partners</h2>\r\n                <p>Some of advertisers on our site may use cookies and web beacons. Our advertising partners are listed below. Each of our advertising partners has their own Privacy Policy for their policies on user data. For easier access, we hyperlinked to their Privacy Policies below.</p>\r\n                <ul>\r\n                    <li>\r\n                        <p>Google</p>\r\n                        <p><a href=\"https://policies.google.com/technologies/ads\">https://policies.google.com/technologies/ads</a></p>\r\n                    </li>\r\n                </ul>\r\n\r\n                <h2>Privacy Policies</h2>\r\n                <p>You may consult this list to find the Privacy Policy for each of the advertising partners of JaeHyun's Blog.</p>\r\n                <p>Third-party ad servers or ad networks uses technologies like cookies, JavaScript, or Web Beacons that are used in their respective advertisements and links that appear on JaeHyun's Blog, which are sent directly to users' browser. They automatically receive your IP address when this occurs. These technologies are used to measure the effectiveness of their advertising campaigns and/or to personalize the advertising content that you see on websites that you visit.</p>\r\n                <p>Note that JaeHyun's Blog has no access to or control over these cookies that are used by third-party advertisers.</p>\r\n\r\n                <h2>Third Party Privacy Policies</h2>\r\n                <p>JaeHyun's Blog's Privacy Policy does not apply to other advertisers or websites. Thus, we are advising you to consult the respective Privacy Policies of these third-party ad servers for more detailed information. It may include their practices and instructions about how to opt-out of certain options. </p>\r\n                <p>You can choose to disable cookies through your individual browser options. To know more detailed information about cookie management with specific web browsers, it can be found at the browsers' respective websites. What Are Cookies?</p>\r\n\r\n                <h2>Children's Information</h2>\r\n                <p>Another part of our priority is adding protection for children while using the internet. We encourage parents and guardians to observe, participate in, and/or monitor and guide their online activity.</p>\r\n                <p>JaeHyun's Blog does not knowingly collect any Personal Identifiable Information from children under the age of 13. If you think that your child provided this kind of information on our website, we strongly encourage you to contact us immediately and we will do our best efforts to promptly remove such information from our records.</p>\r\n\r\n                <h2>Online Privacy Policy Only</h2>\r\n                <p>This Privacy Policy applies only to our online activities and is valid for visitors to our website with regards to the information that they shared and/or collect in JaeHyun's Blog. This policy is not applicable to any information collected offline or via channels other than this website.</p>\r\n\r\n                <h2>Consent</h2>\r\n                <p>By using our website, you hereby consent to our Privacy Policy and agree to its Terms and Conditions.</p>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(PrivacyPolicy);\r\n","export default {\r\n    //  ============== 0. Home ==============  //\r\n    TOGGLE_DRAWER: \"TOGGLE_DRAWER\",\r\n    GET_POST_LIST: \"GET_POST_LIST\",\r\n    CHANGE_POST_PAGE_NUM: \"CHANGE_POST_PAGE_NUM\",\r\n    SET_CUR_DOC_ID: \"SET_CUR_DOC_ID\",\r\n};\r\n","import Constant from \"./constant\"\r\n\r\nexport function toggleDrawer(bol) {\r\n    return {\r\n        type: Constant.TOGGLE_DRAWER,\r\n        payload: bol,\r\n    };\r\n}\r\n\r\nexport function getPostList(packed_post_list){\r\n    var sorted_post_list = packed_post_list.reverse()\r\n    sorted_post_list = sorted_post_list.map((post, idx)=>({\r\n        ...post,\r\n        idx: idx\r\n    }))\r\n    return {\r\n        type: Constant.GET_POST_LIST,\r\n        sorted_post_list: sorted_post_list,\r\n        post_list: packed_post_list\r\n    };\r\n}\r\n\r\nexport function setPostPageNum(cur_page_num){\r\n    return {\r\n        type: Constant.CHANGE_POST_PAGE_NUM,\r\n        cur_page_num: cur_page_num\r\n    };\r\n}\r\n\r\nexport function setCurDoc(payload){\r\n    return {\r\n        type: Constant.SET_CUR_DOC_ID,\r\n        cur_doc: payload.cur_doc,\r\n        cur_doc_id: payload.cur_doc_id,\r\n        cur_doc_idx: payload.cur_doc_idx\r\n    };\r\n}","import React from 'react';\nimport { useDispatch, connect } from 'react-redux';\nimport {withRouter} from \"react-router-dom\"\nimport { toggleDrawer } from '@store/action'\n\nimport {Button} from '@material-ui/core';\nimport {Menu, MenuOpen} from '@material-ui/icons';\n\nimport bear from \"@image/bear.png\"\n\nconst Header = (props) => {\n    const dispatch = useDispatch();\n    const { menuSwitch, history } = props;\n\n    const goHome = () => {\n        if (history.location.pathname !== \"/home\" && history.location.pathname !== \"/\" ){\n            history.push('/home')\n        }\n    }\n\n    const openDrawer = () => {\n        dispatch(toggleDrawer(true))\n    };\n\n    return (\n        <div id=\"header\">\n            <div className=\"logoWarp\" onClick={goHome}>\n                <img src={bear} alt=\"bearimag\"></img>\n                <div className=\"title\">\n                    <span>JaeHyun</span><span style={{fontSize: 30}}>'</span><span>s Blog</span>\n                </div>\n            </div>\n            <Button onClick={openDrawer}>\n                {menuSwitch\n                ?<MenuOpen />\n                :<Menu/>\n                }\n            </Button>\n        </div>\n    );\n};\n\nexport default connect(state => ({\n    menuSwitch: state.menuSwitch\n}))(withRouter(Header));\n","import React from 'react';\nimport { useDispatch, connect } from 'react-redux';\nimport {withRouter} from \"react-router-dom\"\nimport { toggleDrawer } from '@store/action'\n\nimport {\n    Drawer, Avatar, List, ListItem, ListItemIcon, ListItemText,\n    Divider\n} from '@material-ui/core';\n\nimport routes from \"@/router\"\nimport bear from \"@image/bear.png\"\n\n\n\nconst LeftMenu = (props) => {\n    const dispatch = useDispatch();\n    const { menuSwitch, history } = props;\n\n    const closeDrawer = () => {\n        dispatch(toggleDrawer(false))\n    };\n\n    const goPage = (event) => {\n        dispatch(toggleDrawer(false))\n        history.push(event.currentTarget.getAttribute(\"path\"))\n    };\n\n    return (\n        <Drawer id=\"drawer\" anchor=\"left\" open={menuSwitch} onClose={closeDrawer}>\n            <List className=\"menuList\">\n                <ListItem className=\"avatarWarp\">\n                    <Avatar alt=\"JaeHyun.Back\" src={bear} className=\"avatar\"/>\n                    <span>JaeHyun</span><span style={{fontSize: 24}}>'</span><span>s Blog</span>\n                </ListItem>\n                <Divider style={{marginTop: 20}}></Divider>\n                {routes.filter(r => r.leftmenu).map((menu) => (\n                    <ListItem \n                        key={menu.name}\n                        path={menu.path}\n                        button={true}\n                        className=\"menu\"\n                        onClick={goPage}\n                    >\n                        <ListItemIcon >{menu.icon}</ListItemIcon>\n                        <ListItemText \n                            disableTypography={true}\n                            primary={menu.name.toUpperCase()}\n                        />\n                    </ListItem>\n                ))}\n            </List>\n        </Drawer>\n    );\n};\n\nexport default connect(state => ({\n    menuSwitch: state.menuSwitch\n}))(withRouter(LeftMenu));\n","import React, {Fragment} from 'react';\n\nimport Header from \"@components/common/Header\"\nimport Footer from \"@components/common/Footer\"\nimport LeftMenu from \"@components/common/LeftMenu\"\n\nconst Container = (props) => {\n    const { children } = props;\n  \n    return (\n        <Fragment>\n            <Header />\n            <LeftMenu />\n            {children}\n            <Footer />\n        </Fragment>\n    );\n}\n\nexport default Container;\n","import React from 'react';\nimport {withRouter} from \"react-router-dom\"\n\nimport jaehyun from \"@image/jaehyun.jpg\"\nimport IconButton from '@material-ui/core/IconButton';\nimport {LinkedIn, GitHub, Instagram, Facebook} from '@material-ui/icons';\n\nconst email = \"94wogus@gmail.com\"\nconst workEmail = \"94wogus@quantit.io\"\n\nconst snsList = [\n    {  \n        name: \"LinkedIn\",\n        url: \"https://www.linkedin.com/in/jae-hyun-back-a1496118b/\",\n        icon: <LinkedIn className=\"icon\"/>\n    },\n    {\n        name: \"GitHub\",\n        url: \"https://github.com/94wogus/\",\n        icon: <GitHub className=\"icon\"/>\n    },\n    {\n        name: \"Instagram\",\n        url: \"https://www.instagram.com/jaehyunback/?hl=ko\",\n        icon: <Instagram className=\"icon\"/>\n    },\n    {\n        name: \"Facebook\",\n        url: \"https://www.facebook.com/back.jaehyun/\",\n        icon: <Facebook className=\"icon\"/>\n    }\n]\n\nconst Profile = (props) => {\n    const goSns = (e) => {\n        window.open(e.currentTarget.getAttribute(\"path\"), '_blank');\n    } \n\n    return (\n        <div id=\"profileContainer\">\n            <img className=\"profileImage\" src={jaehyun} alt=\"jaehyun-character\"/>\n            <div className=\"profile\">\n                <div>\n                    <span>JaeHyun.Back</span> / Developer(Quantit)\n                </div>\n                <div>\n                    email: <a href={`mailto:${email}`} title=\"개인 이메일\">{email}</a>\n                </div>\n                <div>\n                    work-email: <a href={`mailto:${workEmail}`} title=\"업무용 이메일\">{workEmail}</a>\n                </div>\n                <div className=\"snsList\">\n                    {snsList.map((sns) => (\n                        <IconButton\n                            key={sns.name}\n                            onClick={goSns}\n                            path={sns.url}\n                        >\n                            {sns.icon}\n                        </IconButton>\n                    ))\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(Profile);\n","import React from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\"\r\nimport {Card, CardActionArea, CardContent} from '@material-ui/core';\r\n\r\nimport { setCurDoc } from '@store/action'\r\n\r\nconst PostCard = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { post, history } = props;\r\n\r\n    const readPost = (e) => {\r\n        dispatch(setCurDoc({\r\n            cur_doc: post,\r\n            cur_doc_id: e.currentTarget.id,\r\n            cur_doc_idx: e.currentTarget.getAttribute(\"idx\")\r\n        }))\r\n        history.push(`/post/doc/${e.currentTarget.id}`)\r\n    }\r\n\r\n    return (\r\n        <Card className=\"PostCard\" id={post.PostId} idx={post.idx} onClick={readPost}>\r\n            <CardActionArea className=\"PostContent\">\r\n                <div className=\"PostImage\">\r\n                    <img \r\n                        src={`https://drive.google.com/uc?export=view&id=${post.ImageId}`}\r\n                        alt={post.Title}\r\n                        title={post.Title}\r\n                    />\r\n                </div>\r\n                <CardContent className=\"PostInfo\">\r\n                    <span className=\"title\">{post.Title}</span>\r\n                    <span className=\"description\">{post.Description}</span>\r\n                    <span className=\"time\">마지막 업데이트 시각: {post.LastUpdated}</span>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default withRouter(PostCard);\r\n","import React from 'react';\r\nimport {withRouter} from \"react-router-dom\"\r\nimport { connect } from 'react-redux';\r\n\r\nimport {Button} from '@material-ui/core';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n\r\nimport PostCard from \"@components/common/PostCard\"\r\n\r\nconst PostList = (props) => {\r\n    const { post_list, history } = props;\r\n\r\n    const goPost = () =>{\r\n        history.push(\"/post\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"mainPosts\">\r\n            <div className=\"titleWrap\">\r\n                <h1>Recent Posts</h1>\r\n                <Button className=\"more\" onClick={goPost}>\r\n                    <ArrowForwardIosIcon />\r\n                    <span>More</span>\r\n                </Button>\r\n            </div>\r\n            <div className=\"PostWarp\">\r\n            {post_list.slice(0, 10).map((post)=>(\r\n                <PostCard post={post} key={post.PostId}/>\r\n            ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default connect(state => ({\r\n    post_list: state.post_list\r\n}))(withRouter(PostList));\r\n","import React from 'react';\r\nimport {withRouter} from \"react-router-dom\"\r\n\r\nimport Container from \"@components/common/Container\"\r\nimport Profile from \"@components/Home/Profile\"\r\nimport PostList from \"@components/Home/PostList\"\r\n\r\nconst Home = (props) => {\r\n    return (\r\n        <Container>\r\n            <div id=\"home\" className=\"main\">\r\n                <Profile />\r\n                <PostList />\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\nexport default withRouter(Home);\r\n","import React from 'react';\r\nimport {withRouter} from \"react-router-dom\"\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n    Card, CardActionArea, CardContent\r\n} from '@material-ui/core';\r\n\r\nconst Series = (props) => {\r\n    const { grouped_post_list, history } = props;\r\n    return (\r\n        <div className=\"seriesWrap\">\r\n            <ul>\r\n            {Object.keys(grouped_post_list).map((category)=>(\r\n                <Card className=\"seriesCard\" key={category}>\r\n                    <CardActionArea className=\"seriesContent\">\r\n                        <div className=\"seriesImage\">\r\n                            <img \r\n                                src={`https://drive.google.com/uc?export=view&id=${grouped_post_list[category][0].ImageId}`}\r\n                                alt={category}\r\n                                title={category}\r\n                            />\r\n                        </div>\r\n                        <CardContent className=\"seriesInfo\">\r\n                            <span className=\"title\">{category}</span>\r\n                            <span className=\"description\">{grouped_post_list[category][0].Title}</span>\r\n                            {grouped_post_list[category].length>1?\r\n                            <span className=\"count\">외{grouped_post_list[category].length - 1}개</span>\r\n                            :<span></span>\r\n                            }\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </Card>\r\n            ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default connect(state => ({\r\n    grouped_post_list: state.grouped_post_list\r\n}))(withRouter(Series));\r\n","import React from 'react';\r\nimport {withRouter} from \"react-router-dom\"\r\nimport { connect, useDispatch} from 'react-redux';\r\n\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport PostCard from \"@components/common/PostCard\"\r\n\r\nimport { setPostPageNum } from '@store/action'\r\n\r\nconst PostList = (props) => {\r\n    const dispatch = useDispatch();\r\n    const { post_page, cur_page_post_list, cur_page_num, history } = props;\r\n\r\n    const pageChange = (event, value) => {\r\n        dispatch(setPostPageNum(value))\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"mainPosts\">\r\n            <h1 className=\"titleWrap\">JaeHyun's Posts</h1>\r\n            <div className=\"PostWarp\">\r\n            {cur_page_post_list.map((post)=>(\r\n                <PostCard post={post} key={post.PostId} />\r\n            ))}\r\n            </div>\r\n            <Pagination \r\n                count={post_page} \r\n                className=\"postPagination\" \r\n                onChange={pageChange} \r\n                page={cur_page_num}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default connect(state => ({\r\n    post_page: state.post_page,\r\n    cur_page_num: state.cur_page_num,\r\n    cur_page_post_list: state.cur_page_post_list\r\n    \r\n}))(withRouter(PostList));\r\n","import React from 'react';\r\nimport {withRouter} from \"react-router-dom\"\r\n\r\nimport Container from \"@components/common/Container\"\r\nimport Series from \"@components/Post/Series\"\r\nimport PostList from \"@components/Post/PostList\"\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <Container>\r\n            <div id=\"post\" className=\"main\">\r\n                <div className=\"seriesContainer\">\r\n                    <h1 style={{marginBottom: 5, fontSize:35}}>Post Series</h1>\r\n                    <Series />\r\n                    <PostList />\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\nexport default withRouter(Post);\r\n","\r\nexport const SPREATSHEET_URL = `https://sheets.googleapis.com/v4/spreadsheets/${process.env.REACT_APP_SPREADSHEET_ID}/values/Post?key=${process.env.REACT_APP_API_KEY}`\r\n\r\nexport const METHOD = {\r\n    GET: { num: 0, type: \"GET\" },\r\n    DELETE: { num: 1, type: \"DELETE\" },\r\n    POST: { num: 2, type: \"POST\" },\r\n    PUT: { num: 3, type: \"PUT\" },\r\n    POST_FILES: { num: 4, type: \"POST\" },\r\n    LOGIN: { num: 5, type: \"POST\" }\r\n};\r\n\r\nexport const request = (method, url, payload={}, json=false) => {\r\n    let axiosConfig = {method: method.type};\r\n    if (method.num <= 1) {\r\n        axiosConfig = { ...axiosConfig};\r\n    } else if (method.num <= 3) {\r\n        axiosConfig = { ...axiosConfig, body: JSON.stringify(payload)};\r\n    } else if (method.num <= 4) {\r\n        axiosConfig = {...axiosConfig, headers: { \"Content-Type\": \"multipart/form-data\" }, body: payload}\r\n    } else {\r\n        axiosConfig = { ...axiosConfig, body: JSON.stringify(payload)};\r\n    }\r\n    return fetch(url, axiosConfig)\r\n    .then((response) => {\r\n        if (json){\r\n            return response.json()\r\n        } else{\r\n            return response.text()\r\n        }\r\n    })\r\n    .catch((error) => {console.error('Error:', error); return null})\r\n};\r\n\r\nexport const packDocURL = (fid) => {\r\n    return `https://docs.google.com/feeds/download/documents/export/Export?id=${fid}&exportFormat=html`\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { METHOD, request, packDocURL} from \"@api\";\r\n\r\nimport {Divider} from '@material-ui/core';\r\nimport Container from \"@components/common/Container\"\r\n\r\nimport { setCurDoc } from '@store/action'\r\n\r\nconst PostRead = (props) => {\r\n    const dispatch = useDispatch()\r\n    const {match, post_list, cur_doc, cur_doc_id, cur_doc_idx} = props\r\n\r\n    useEffect(() => {\r\n        var url = packDocURL(match.params.id)\r\n        request(METHOD.GET, url)\r\n        .then(result => {\r\n            var doc = document.getElementById(\"doc\")\r\n            var dummyHTML = document.createElement(\"html\")\r\n            dummyHTML.innerHTML = result\r\n            \r\n            var styles = dummyHTML.querySelectorAll(\"head > style\")\r\n            styles.forEach((currentValue, currentIndex, listObj)=> {\r\n                doc.appendChild(currentValue)\r\n            })\r\n\r\n            var bodyChlidren = dummyHTML.querySelector(\"body\").children\r\n            Array.prototype.forEach.call(bodyChlidren, (elem, index) => {\r\n                doc.appendChild(elem)\r\n            });\r\n        })\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (cur_doc_id !== match.params.id){\r\n            var cur_doc = post_list.filter(post => post.PostId === match.params.id)[0]\r\n            if (cur_doc){\r\n                dispatch(setCurDoc({\r\n                    cur_doc: cur_doc,\r\n                    cur_doc_id: cur_doc.PostId,\r\n                    cur_doc_idx: cur_doc.idx\r\n                }))\r\n            }\r\n        }\r\n    }, [post_list])\r\n\r\n    return (\r\n        <Container>\r\n            <div id=\"docWrap\" className=\"main\">\r\n                <h1 className=\"docTitle\">{cur_doc.Title}</h1>\r\n                <h2 className=\"docsubTitle\">{cur_doc.Description}</h2>\r\n                <span className=\"docTime\">{cur_doc.LastUpdated}</span>\r\n                <Divider className=\"docDivider\"/>\r\n                <div id=\"doc\">\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default connect(state => ({\r\n    post_list: state.post_list,\r\n    cur_doc: state.cur_doc,\r\n    cur_doc_id: state.cur_doc_id,\r\n    cur_doc_idx: state.cur_doc_idx\r\n}))(withRouter(PostRead));\r\n","import React from 'react';\nimport PrivacyPolicy from '@views/PrivacyPolicy';\nimport Home from '@views/Home';\nimport Post from '@views/Post';\nimport PostRead from '@views/PostRead';\n\nimport {HomeRounded, DescriptionOutlined} from '@material-ui/icons';\n\nconst routes = [\n    {\n        name: 'main',\n        path: '/',\n        component: Home,\n        leftmenu: false\n    },\n    {\n        name: 'privacy_policy',\n        path: '/privacypolicy',\n        component: PrivacyPolicy,\n        leftmenu: false\n    },\n    {\n        name: 'post_doc',\n        path: '/post/doc/:id',\n        component: PostRead,\n        leftmenu: false\n    },\n    {\n        name: 'home',\n        path: '/home',\n        component: Home,\n        leftmenu: true,\n        icon: <HomeRounded fontSize=\"large\" style={{marginLeft: 10}}/>\n    },\n    {\n        name: 'post',\n        path: '/post',\n        component: Post,\n        leftmenu: true,\n        icon: <DescriptionOutlined fontSize=\"large\" style={{marginLeft: 10}}/>\n    }\n\n];\n\nexport default routes;\n","export default {\r\n    // ============ 0.Home ============ //\r\n    menuSwitch: false,\r\n    post_list: [],\r\n    grouped_post_list: {},\r\n    post_page: 1,\r\n    cur_page_num: 1,\r\n    cur_page_post_list: [],\r\n    cur_doc: {},\r\n    cur_doc_id: \"\",\r\n    cur_doc_idx: 0,\r\n}\r\n","export const groupBy = (items, key) => items.reduce(\r\n    (result, item) => ({\r\n        ...result,\r\n        [item[key]]: [\r\n            ...(result[item[key]] || []),\r\n            item,\r\n        ],\r\n    }), \r\n    {},\r\n);","import {applyMiddleware, createStore} from \"redux\"\nimport promiseMiddleware from \"redux-promise\";\nimport reduxThunk from \"redux-thunk\";\n\nimport rootReducer from \"./reducer\"\n\nconst createStoreWithMiddleware = applyMiddleware(\n    promiseMiddleware,\n    reduxThunk\n)(createStore);\n\nconst store = createStoreWithMiddleware(rootReducer)\nwindow.store = store\n\nexport default store\n","import Constant from \"./constant\"\r\nimport initialState from \"./state\"\r\nimport {groupBy} from \"@/utils/func.js\"\r\n\r\nconst PER_PAGE = 5\r\n\r\nexport default function rootReducer(state=initialState, action){\r\n    switch(action.type){\r\n        //  ============== 0. Home ==============  //\r\n        case Constant.TOGGLE_DRAWER:\r\n            return Object.assign({}, state, {\r\n                menuSwitch: action.payload\r\n            })\r\n        case Constant.GET_POST_LIST:\r\n            var grouped_post_list =  groupBy(action.post_list, \"Category\")\r\n            var quotient = parseInt(action.post_list.length / PER_PAGE);\r\n            if (action.post_list.length % PER_PAGE > 0){\r\n                quotient = quotient + 1\r\n            }\r\n            return Object.assign({}, state, {\r\n                post_list: action.sorted_post_list,\r\n                grouped_post_list: grouped_post_list,\r\n                post_page: quotient,\r\n                cur_page_post_list: action.sorted_post_list.slice(0, 5)\r\n            })\r\n        case Constant.CHANGE_POST_PAGE_NUM:\r\n            var begin = (action.cur_page_num - 1) * PER_PAGE\r\n            var end = action.cur_page_num * PER_PAGE\r\n            return Object.assign({}, state, {\r\n                cur_page_num: action.cur_page_num,\r\n                cur_page_post_list: state.post_list.slice(begin, end)\r\n            })\r\n        case Constant.SET_CUR_DOC_ID:\r\n            return Object.assign({}, state, {\r\n                cur_doc: action.cur_doc,\r\n                cur_doc_id: action.cur_doc_id,\r\n                cur_doc_idx: action.cur_doc_idx\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React, {Fragment, useEffect} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Router, Switch, Route} from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport { Provider, useDispatch } from \"react-redux\";\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport routes from '@/router';\r\nimport store from '@/store';\r\n\r\nimport '@assets/style/common.css';\r\nimport '@assets/style/desktop.scss';\r\n\r\nimport { SPREATSHEET_URL, METHOD, request} from \"@api\";\r\nimport { getPostList } from '@store/action'\r\n\r\nconst App = () => {\r\n    const dispatch = useDispatch();\r\n    const history = createBrowserHistory();\r\n\r\n    useEffect(() => {\r\n        request(METHOD.GET, SPREATSHEET_URL, {}, true)\r\n        .then(result => {\r\n            var index = result.values.shift()\r\n            var packed_post_list = result.values.map((item, n)=>(\r\n                Object.assign({},\r\n                    ...index.map((key, idx)=>({[key]: item[idx]}))\r\n                )\r\n            ))\r\n            dispatch(getPostList(packed_post_list))\r\n        })\r\n        \r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Router history={history}>\r\n                <Switch>\r\n                {routes.map((r) => (\r\n                    <Route key={r.path} path={r.path} component={r.component} exact/>\r\n                ))}\r\n                </Switch>\r\n            </Router>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}